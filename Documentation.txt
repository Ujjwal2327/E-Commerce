terminal
  npm init
    entry point - backend/server.js  
  npm i express mongoose dotenv nodemon
  npm i bcryptjs jsonwebtoken validator nodemailer cookie-parser body-parser

package.json
  "start": "node backend/server.js",    // for production 
  "dev": "nodemon backend/server.js"    // for development

mongoose queries
  model.create( {} )
  model.find( {} )
  model.findById( id );
  model.findByIdAndUpdate( 
    id, 
    {new details}, 
    {new: true, runValidators: true, useFindAndModify: false} 
  )
  model.limit(n);
  model.skip(n);
  model.countDocuments()
  result.deleteOne();
  result.save();

error handling
  simple error
  async try-catch error
  unhandled promise rejection error - for try catch in db.js
  uncaught error - ex - using variable before declaring
  casting error - wrong mongodb-id error in error.js

cookies are not accessible in frontend
  so send jwt in cookies, not in localstorage

jwt secret_key
  if anyone finds out the key, then he can make tons of admin fake accounts

why not to tell exactly in login that only password is wrong
  for safety purpose
  if any user is randomly entering email and password, he will got to know that email exists if we tell exactly that password is wrong

cookie
  res.cookie('name', value, {
    expires: new Date(Date.now()),
    httpOnly: true
  });
  const {name} = res.cookies



http://localhost:8080/api/v1/products?keyword=pro&category=laptop&price[gte]=12&price[lt]=20000&page=2


Todos
while register & update email, send activation mail to that email before registering & updating
if admin updates / delete any user, user should get mail regarding it
should't we change product rating / review after the user has been deleted
